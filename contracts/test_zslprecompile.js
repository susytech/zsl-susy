// Copyright 2017 Zerocoin Electric Coin Company LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * Test ZSLPrecompile.sol
 * 
 * Usage:
 * 1. Deploy ZSLPrecompile and instantiate as zslprecompile.
 * 2. Load this javascript file into geth.
 * 3. Invoke:
 *    test_zslprecompile_shielding()
 *    test_zslprecompile_unshielding()
 * 
 * Notes:
 * 1. Test data is copied from snark_test.go
 * 2. Solidity 0.3.6 does not have hex literals, so it was easier to write the test
 * in javascript and use hex byte strings.
 * 
 */

function test_zslprecompile_shielding() {
    success = 0;
    counter = 0;
    // ProveShielding
    //   rho:  fbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbac
    //    pk:  acfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfb
    //   val:  2378237
    // proof:  0x30ca9ae4ef030e60f43e8488a0ad9a6df4d8cb98f099d95816c668cd10cce320309ed300f77ba4c64f0a6689471e502f36fb5343bed223fa935f4db0988512c61230592e9975e34c2bac4ae060111b52b2bbf522940ad7e45e174caa2e75742a1a06fbfbfbb073cc4c3549977dff1448629116d7ab713cae0a6a2459c04d7a7b3526300f8c871021be4ccf3e6cfcb53c4d293f11756097176536a1256ba94520bb5f203e85bfde90b941fcef07274990d063ce82e89ac2a6bb507250727ec15e661715c043f215cc0e713dd913da9cf647b7c8b4feefef14473d7689886169a12efe04102bf2da2ba2bc14239c3ab0c5c94bfcf1e09dbd30c2a6ca109dc14b66443c1030a9601c04ba23c3eada182fe10f0f8dcd52327a061b64506333fc75128f21050b00d59081bcb4a2db9633d65b33e3f90873dea5730491ccb927e2f2f795a48007303d6d1602edbc2d7676e605f60a4381728fbb13e667d2e29a65e00249b0935e1845cb8e6f98c72f84f9dc73caa475f0dd17ba12ac2a96e9401f5c3e79195c822230111bdffa53cfbdfdf829c23f2ff5d5fd37550f31b82a64dc106efc4166496e0c37f458ccf06d96ad56244a6463ad43856fe8db6519473ae5b8b4d4c6e60ad016305f2e56152e45031071582e802ce18ef2f91ba0c6ff5298b03ba1f1f759ba8b103b8266e153c2e2dca00591dc40a573ce606b3ea8ce5c1220efd0a53d88e35300304269a0adf45d8d99233343b3eb7212cc4b16733f82a39e0a69d785c98b27f32ae4a003583781e62d11af2a3a0c9f51cf41a9c2d82c591f115a34d427e95fab25

    // VerifyShielding
    nf = "0x35f7ff845e4786d644c9c905fe68fd0f602fea0beb2c341bc5d2defc17c32e86";
    cm = "0xd6218a07714dd9fac92bdeefd3f4c0d769f40f4b043ad7e67e7375edc498e45c";
    value = 2378237;
    proof = "0x30ca9ae4ef030e60f43e8488a0ad9a6df4d8cb98f099d95816c668cd10cce320309ed300f77ba4c64f0a6689471e502f36fb5343bed223fa935f4db0988512c61230592e9975e34c2bac4ae060111b52b2bbf522940ad7e45e174caa2e75742a1a06fbfbfbb073cc4c3549977dff1448629116d7ab713cae0a6a2459c04d7a7b3526300f8c871021be4ccf3e6cfcb53c4d293f11756097176536a1256ba94520bb5f203e85bfde90b941fcef07274990d063ce82e89ac2a6bb507250727ec15e661715c043f215cc0e713dd913da9cf647b7c8b4feefef14473d7689886169a12efe04102bf2da2ba2bc14239c3ab0c5c94bfcf1e09dbd30c2a6ca109dc14b66443c1030a9601c04ba23c3eada182fe10f0f8dcd52327a061b64506333fc75128f21050b00d59081bcb4a2db9633d65b33e3f90873dea5730491ccb927e2f2f795a48007303d6d1602edbc2d7676e605f60a4381728fbb13e667d2e29a65e00249b0935e1845cb8e6f98c72f84f9dc73caa475f0dd17ba12ac2a96e9401f5c3e79195c822230111bdffa53cfbdfdf829c23f2ff5d5fd37550f31b82a64dc106efc4166496e0c37f458ccf06d96ad56244a6463ad43856fe8db6519473ae5b8b4d4c6e60ad016305f2e56152e45031071582e802ce18ef2f91ba0c6ff5298b03ba1f1f759ba8b103b8266e153c2e2dca00591dc40a573ce606b3ea8ce5c1220efd0a53d88e35300304269a0adf45d8d99233343b3eb7212cc4b16733f82a39e0a69d785c98b27f32ae4a003583781e62d11af2a3a0c9f51cf41a9c2d82c591f115a34d427e95fab25";
    result = zslprecompile.verifyShielding(proof, nf, cm, value);
    success += (result == true);
    counter++;

    //VerifyShielding
    nf = "0x35f7ff845e4786d644c9c905fe68fd0f602fea0beb2c341bc5d2defc17c32e86";
    cm = "0xd6218a07714dd9fac92bdeefd3f4c0d769f40f4b043ad7e67e7375edc498e45c";
    value = 2378236;
    proof = "0x30ca9ae4ef030e60f43e8488a0ad9a6df4d8cb98f099d95816c668cd10cce320309ed300f77ba4c64f0a6689471e502f36fb5343bed223fa935f4db0988512c61230592e9975e34c2bac4ae060111b52b2bbf522940ad7e45e174caa2e75742a1a06fbfbfbb073cc4c3549977dff1448629116d7ab713cae0a6a2459c04d7a7b3526300f8c871021be4ccf3e6cfcb53c4d293f11756097176536a1256ba94520bb5f203e85bfde90b941fcef07274990d063ce82e89ac2a6bb507250727ec15e661715c043f215cc0e713dd913da9cf647b7c8b4feefef14473d7689886169a12efe04102bf2da2ba2bc14239c3ab0c5c94bfcf1e09dbd30c2a6ca109dc14b66443c1030a9601c04ba23c3eada182fe10f0f8dcd52327a061b64506333fc75128f21050b00d59081bcb4a2db9633d65b33e3f90873dea5730491ccb927e2f2f795a48007303d6d1602edbc2d7676e605f60a4381728fbb13e667d2e29a65e00249b0935e1845cb8e6f98c72f84f9dc73caa475f0dd17ba12ac2a96e9401f5c3e79195c822230111bdffa53cfbdfdf829c23f2ff5d5fd37550f31b82a64dc106efc4166496e0c37f458ccf06d96ad56244a6463ad43856fe8db6519473ae5b8b4d4c6e60ad016305f2e56152e45031071582e802ce18ef2f91ba0c6ff5298b03ba1f1f759ba8b103b8266e153c2e2dca00591dc40a573ce606b3ea8ce5c1220efd0a53d88e35300304269a0adf45d8d99233343b3eb7212cc4b16733f82a39e0a69d785c98b27f32ae4a003583781e62d11af2a3a0c9f51cf41a9c2d82c591f115a34d427e95fab25";    
    result = zslprecompile.verifyShielding(proof, nf, cm, value);
    success += (result == false);
    counter++;

    //VerifyShielding
    nf = "0x34f7ff845e4786d644c9c905fe68fd0f602fea0beb2c341bc5d2defc17c32e86";
    cm = "0xd6218a07714dd9fac92bdeefd3f4c0d769f40f4b043ad7e67e7375edc498e45c";
    value = 2378237
    proof = "0x30ca9ae4ef030e60f43e8488a0ad9a6df4d8cb98f099d95816c668cd10cce320309ed300f77ba4c64f0a6689471e502f36fb5343bed223fa935f4db0988512c61230592e9975e34c2bac4ae060111b52b2bbf522940ad7e45e174caa2e75742a1a06fbfbfbb073cc4c3549977dff1448629116d7ab713cae0a6a2459c04d7a7b3526300f8c871021be4ccf3e6cfcb53c4d293f11756097176536a1256ba94520bb5f203e85bfde90b941fcef07274990d063ce82e89ac2a6bb507250727ec15e661715c043f215cc0e713dd913da9cf647b7c8b4feefef14473d7689886169a12efe04102bf2da2ba2bc14239c3ab0c5c94bfcf1e09dbd30c2a6ca109dc14b66443c1030a9601c04ba23c3eada182fe10f0f8dcd52327a061b64506333fc75128f21050b00d59081bcb4a2db9633d65b33e3f90873dea5730491ccb927e2f2f795a48007303d6d1602edbc2d7676e605f60a4381728fbb13e667d2e29a65e00249b0935e1845cb8e6f98c72f84f9dc73caa475f0dd17ba12ac2a96e9401f5c3e79195c822230111bdffa53cfbdfdf829c23f2ff5d5fd37550f31b82a64dc106efc4166496e0c37f458ccf06d96ad56244a6463ad43856fe8db6519473ae5b8b4d4c6e60ad016305f2e56152e45031071582e802ce18ef2f91ba0c6ff5298b03ba1f1f759ba8b103b8266e153c2e2dca00591dc40a573ce606b3ea8ce5c1220efd0a53d88e35300304269a0adf45d8d99233343b3eb7212cc4b16733f82a39e0a69d785c98b27f32ae4a003583781e62d11af2a3a0c9f51cf41a9c2d82c591f115a34d427e95fab25";
    result = zslprecompile.verifyShielding(proof, nf, cm, value);
    success += (result == false);
    counter++;

    console.log("Test results: " + success + " / " + counter + " tests passed");
}


function test_zslprecompile_unshielding() {
    success = 0;
    counter = 0;
    // ProveUnshielding
    //   rho:  dedeffdddedeffdddedeffdddedeffdddedeffdddedeffdddedeffdddedeffdd
    //    sk:  f0f0f0f00f0f0ffffffffff000000f0f0f0f0f00f0000f0f00f00f0f0f0f00ff
    //   val:  2378237
    //  treeIndex:  0
    // empty_uncles = ["0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100","0x8000000000000000000000000000000000000000000000000000000000000100"]
    // proof:  0x309827c7f20d57d68b0d28ade785a0fb9441614dcf3aeed634830952cd08434111dc8751e42f9be36b9d7fea898caf6a697fa51180ee8e385a408b4cdfccae5f0e30075135cc132fcd28d2abd1203f3acfe83c0f6b477777187cc64e6c0a84fdd6039bce714c2e3962c301294e96eff733b31c734493cf71086b435cbd41ee20c62a3086c71bfc7ab015b3e6979b26c974489d8ab56bb1cf66cb0536ec671c02e13e1e9edc24cd7e510e6b9639652b20b004b96d68c096617d1add91eb310e9571c11e0f181436021f293dabd6398deba023f554a3e4c9dbfee1615aa78c5aea313a1796a5537dfc384bfb30d225cea79fb81134c98b253f06ecfc976dcf6bebfb8c1f305709670736d6f2dd80bba0fc93ad4062ebab8651de80f22c485b149d94721227d2af2aebbfeda7ce69fdf1aa9d0ebe43a83dd7b7bfb6772836affd6c61130e053051e49e36429bee2cd64ebf4bdae210a6eefbdd0c4eb21b1e2e025df63e0ff92da8581b71414382c4a8a82b8f526e25080dbaeb0c2361989bfdf91d5d713c112a30a3a02b9bc7c1ad1fbaba91faf7e3b02f2c1a34f3cca18a53f97ab306a4df820eaf9288221a482b8ef9eaf8d2ea81a6a463fcff11aefaff4141014e4410c3652530284026950e0098beb812441f73e010f208bd9124ae5bd19cf5ded0b72da9bc041bb91addb7b4e7b2f227b456978858a3747598c2e3d4741a01568f27e9564d0030cf45d4ba3bbb4169e8c87af983014c333909ee589b705a32c131ae17150e662f5bd1462654436210b8bdcefe5bf5821ee4583735672f0b3580ed4b6ef7eed415

    // VerifyUnshielding
    nf = "0x45ccb210613318d0d127e9947c2ce6b1b246c5c2dd53489c1f39397843410c1a";
    rt = "0x8610652739ac0c6bb6b5353649bb822b26543f0ebe88f32a489a56843cd04f03";
    value = 2378237;
    proof = "0x309827c7f20d57d68b0d28ade785a0fb9441614dcf3aeed634830952cd08434111dc8751e42f9be36b9d7fea898caf6a697fa51180ee8e385a408b4cdfccae5f0e30075135cc132fcd28d2abd1203f3acfe83c0f6b477777187cc64e6c0a84fdd6039bce714c2e3962c301294e96eff733b31c734493cf71086b435cbd41ee20c62a3086c71bfc7ab015b3e6979b26c974489d8ab56bb1cf66cb0536ec671c02e13e1e9edc24cd7e510e6b9639652b20b004b96d68c096617d1add91eb310e9571c11e0f181436021f293dabd6398deba023f554a3e4c9dbfee1615aa78c5aea313a1796a5537dfc384bfb30d225cea79fb81134c98b253f06ecfc976dcf6bebfb8c1f305709670736d6f2dd80bba0fc93ad4062ebab8651de80f22c485b149d94721227d2af2aebbfeda7ce69fdf1aa9d0ebe43a83dd7b7bfb6772836affd6c61130e053051e49e36429bee2cd64ebf4bdae210a6eefbdd0c4eb21b1e2e025df63e0ff92da8581b71414382c4a8a82b8f526e25080dbaeb0c2361989bfdf91d5d713c112a30a3a02b9bc7c1ad1fbaba91faf7e3b02f2c1a34f3cca18a53f97ab306a4df820eaf9288221a482b8ef9eaf8d2ea81a6a463fcff11aefaff4141014e4410c3652530284026950e0098beb812441f73e010f208bd9124ae5bd19cf5ded0b72da9bc041bb91addb7b4e7b2f227b456978858a3747598c2e3d4741a01568f27e9564d0030cf45d4ba3bbb4169e8c87af983014c333909ee589b705a32c131ae17150e662f5bd1462654436210b8bdcefe5bf5821ee4583735672f0b3580ed4b6ef7eed415";
    result = zslprecompile.verifyUnshielding(proof, nf, rt, value);
    success += (result == true);
    counter++;

    // VerifyUnshielding
    nf = "0x45ccb210613318d0d127e9947c2ce6b1b246c5c2dd53489c1f39397843410c1a";
    rt = "0x8610652739ac0c6bb6b5353649bb822b26543f0ebe88f32a489a56843cd04f03";
    value = 2378236;
    proof = "0x309827c7f20d57d68b0d28ade785a0fb9441614dcf3aeed634830952cd08434111dc8751e42f9be36b9d7fea898caf6a697fa51180ee8e385a408b4cdfccae5f0e30075135cc132fcd28d2abd1203f3acfe83c0f6b477777187cc64e6c0a84fdd6039bce714c2e3962c301294e96eff733b31c734493cf71086b435cbd41ee20c62a3086c71bfc7ab015b3e6979b26c974489d8ab56bb1cf66cb0536ec671c02e13e1e9edc24cd7e510e6b9639652b20b004b96d68c096617d1add91eb310e9571c11e0f181436021f293dabd6398deba023f554a3e4c9dbfee1615aa78c5aea313a1796a5537dfc384bfb30d225cea79fb81134c98b253f06ecfc976dcf6bebfb8c1f305709670736d6f2dd80bba0fc93ad4062ebab8651de80f22c485b149d94721227d2af2aebbfeda7ce69fdf1aa9d0ebe43a83dd7b7bfb6772836affd6c61130e053051e49e36429bee2cd64ebf4bdae210a6eefbdd0c4eb21b1e2e025df63e0ff92da8581b71414382c4a8a82b8f526e25080dbaeb0c2361989bfdf91d5d713c112a30a3a02b9bc7c1ad1fbaba91faf7e3b02f2c1a34f3cca18a53f97ab306a4df820eaf9288221a482b8ef9eaf8d2ea81a6a463fcff11aefaff4141014e4410c3652530284026950e0098beb812441f73e010f208bd9124ae5bd19cf5ded0b72da9bc041bb91addb7b4e7b2f227b456978858a3747598c2e3d4741a01568f27e9564d0030cf45d4ba3bbb4169e8c87af983014c333909ee589b705a32c131ae17150e662f5bd1462654436210b8bdcefe5bf5821ee4583735672f0b3580ed4b6ef7eed415";
    result = zslprecompile.verifyUnshielding(proof, nf, rt, value);
    success += (result == false);
    counter++;

    // VerifyUnshielding
    nf = "0x44ccb210613318d0d127e9947c2ce6b1b246c5c2dd53489c1f39397843410c1a";
    rt = "0x8610652739ac0c6bb6b5353649bb822b26543f0ebe88f32a489a56843cd04f03";
    value = 2378237;
    proof = "0x309827c7f20d57d68b0d28ade785a0fb9441614dcf3aeed634830952cd08434111dc8751e42f9be36b9d7fea898caf6a697fa51180ee8e385a408b4cdfccae5f0e30075135cc132fcd28d2abd1203f3acfe83c0f6b477777187cc64e6c0a84fdd6039bce714c2e3962c301294e96eff733b31c734493cf71086b435cbd41ee20c62a3086c71bfc7ab015b3e6979b26c974489d8ab56bb1cf66cb0536ec671c02e13e1e9edc24cd7e510e6b9639652b20b004b96d68c096617d1add91eb310e9571c11e0f181436021f293dabd6398deba023f554a3e4c9dbfee1615aa78c5aea313a1796a5537dfc384bfb30d225cea79fb81134c98b253f06ecfc976dcf6bebfb8c1f305709670736d6f2dd80bba0fc93ad4062ebab8651de80f22c485b149d94721227d2af2aebbfeda7ce69fdf1aa9d0ebe43a83dd7b7bfb6772836affd6c61130e053051e49e36429bee2cd64ebf4bdae210a6eefbdd0c4eb21b1e2e025df63e0ff92da8581b71414382c4a8a82b8f526e25080dbaeb0c2361989bfdf91d5d713c112a30a3a02b9bc7c1ad1fbaba91faf7e3b02f2c1a34f3cca18a53f97ab306a4df820eaf9288221a482b8ef9eaf8d2ea81a6a463fcff11aefaff4141014e4410c3652530284026950e0098beb812441f73e010f208bd9124ae5bd19cf5ded0b72da9bc041bb91addb7b4e7b2f227b456978858a3747598c2e3d4741a01568f27e9564d0030cf45d4ba3bbb4169e8c87af983014c333909ee589b705a32c131ae17150e662f5bd1462654436210b8bdcefe5bf5821ee4583735672f0b3580ed4b6ef7eed415";
    result = zslprecompile.verifyUnshielding(proof, nf, rt, value);
    success += (result == false);
    counter++;

    // VerifyUnshielding
    nf = "0x45ccb210613318d0d127e9947c2ce6b1b246c5c2dd53489c1f39397843410c1a";
    rt = "0x8810652739ac0c6bb6b5353649bb822b26543f0ebe88f32a489a56843cd04f03";
    value = 2378237;
    proof = "0x309827c7f20d57d68b0d28ade785a0fb9441614dcf3aeed634830952cd08434111dc8751e42f9be36b9d7fea898caf6a697fa51180ee8e385a408b4cdfccae5f0e30075135cc132fcd28d2abd1203f3acfe83c0f6b477777187cc64e6c0a84fdd6039bce714c2e3962c301294e96eff733b31c734493cf71086b435cbd41ee20c62a3086c71bfc7ab015b3e6979b26c974489d8ab56bb1cf66cb0536ec671c02e13e1e9edc24cd7e510e6b9639652b20b004b96d68c096617d1add91eb310e9571c11e0f181436021f293dabd6398deba023f554a3e4c9dbfee1615aa78c5aea313a1796a5537dfc384bfb30d225cea79fb81134c98b253f06ecfc976dcf6bebfb8c1f305709670736d6f2dd80bba0fc93ad4062ebab8651de80f22c485b149d94721227d2af2aebbfeda7ce69fdf1aa9d0ebe43a83dd7b7bfb6772836affd6c61130e053051e49e36429bee2cd64ebf4bdae210a6eefbdd0c4eb21b1e2e025df63e0ff92da8581b71414382c4a8a82b8f526e25080dbaeb0c2361989bfdf91d5d713c112a30a3a02b9bc7c1ad1fbaba91faf7e3b02f2c1a34f3cca18a53f97ab306a4df820eaf9288221a482b8ef9eaf8d2ea81a6a463fcff11aefaff4141014e4410c3652530284026950e0098beb812441f73e010f208bd9124ae5bd19cf5ded0b72da9bc041bb91addb7b4e7b2f227b456978858a3747598c2e3d4741a01568f27e9564d0030cf45d4ba3bbb4169e8c87af983014c333909ee589b705a32c131ae17150e662f5bd1462654436210b8bdcefe5bf5821ee4583735672f0b3580ed4b6ef7eed415";
    result = zslprecompile.verifyUnshielding(proof, nf, rt, value);
    success += (result == false);
    counter++;

    console.log("Test results: " + success + " / " + counter + " tests passed");
}


function test_zslprecompile_transfer() {
    success = 0;
    counter = 0;

    /*
    sk = "0xf0f0f0f00f0f0ffffffffff000000f0f0f0f0f00f0000f0f00f00f0f0f0f00ff"
    pk = "0xe8e55f617b4b693083f883f70926dd5673fa434cefa3660828759947e2276348"
    rho = "0xdedeffdddedeffdddedeffdddedeffdddedeffdddedeffdddedeffdddedeffdd"
    val = 2378237
    o_rho = "0xfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbac";
    o_pk = "0xacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfbacfb";
    o_val = 2378237;
    zsl.createShieldedTransfer(rho,sk,val,0,empty_uncles,rho,sk,val,0,empty_uncles,o_rho,o_pk,o_val,o_rho,o_pk,o_val)
    */

    // VerifyTransfer
    proof = "0x30ae60b58e4e199857d9c0528c9a65fb8139bf98408be33995e37c3ae4acdfa11d10367d45ccfebbdf1698178b661b970d7e44ecabd7ea80e365cb2e8fed86a00e3081745d00414e7274e9be35c7ff513a395e82305967553882986f468a09f55d2c851e8ccf1b5adb61b333cee997e8cc6215ca01369560f77168a5f856e8136c1b309d58aba5b262ffb8ea2567fb368dfd13789dcfc4153a45d60f0f8870164d771bb7e1ea91cb84d8d41cc67998e19ef271ddddebb1f2f51819c192cb8ac6cdb926595fc467848f4128f31b891064ce30fcc4bcd02efcf0300ac6861af67128b928a7a409177f6e759c1d35be98801b095b3393846511947fe9915219d7820ac30c304362d77466cf95b0e6e68a6433e09f679fc32990d710a9b4109b971dcdb6740360a895a472f6db776445d0a18c2dde11612b5d6d4f183edeeb2ecf4b5c28243030be3d81946116d8834422fbbc1e793decb340d41b555994a559d096dc0cba2f209348097be2fbf168d94e4af1acb8b6fecb54c93a64b63a2636319210750a051330affbec270fb908ab37c19662f44d8861acc3bd65e097f6dfb0d62745f0705a1cd3f0fcdd7dda6bcfab5aa11d6fcd5e3e54f4b7d4fc6b4673c162be414beb520830a409b8e9f4dcdbfc243ff1979d8b4b02eb73805e386ea9a79ef543579aeb3222676d67113bedc263e1841bd7d0d2090b711adc9ac3108bb84a6a557447442f1330613836a93b7c8af7e7b44d53a8af152f0e9675a43d5a307d0e49767814b49503294e93ac2d05ae9c20c2b99c3db0225f95b8c913535ddde4578627b41fde5315";
    anchor = "0x8610652739ac0c6bb6b5353649bb822b26543f0ebe88f32a489a56843cd04f03";
    spend_nf = "0x45ccb210613318d0d127e9947c2ce6b1b246c5c2dd53489c1f39397843410c1a";
    send_nf = "0x35f7ff845e4786d644c9c905fe68fd0f602fea0beb2c341bc5d2defc17c32e86";
    cm = "0xd6218a07714dd9fac92bdeefd3f4c0d769f40f4b043ad7e67e7375edc498e45c";
    result = zslprecompile.verifyShieldedTransfer(proof, anchor, spend_nf, spend_nf, send_nf, send_nf, cm, cm);
    success += (result == true);
    counter++;

    console.log("Test results: " + success + " / " + counter + " tests passed");
}

console.log("Run tests by calling functions: test_zslprecompile_shielding(), test_zslprecompile_unshielding(), test_zslprecompile_transfer()");
